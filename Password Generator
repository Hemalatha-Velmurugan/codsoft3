import tkinter as tk
from tkinter import messagebox
import random
import string

# Password Generator Class
class PasswordGenerator:
    def __init__(self, root):
        self.root = root
        self.root.title("Random Password Generator")
        self.root.geometry("400x400")
        self.root.config(bg="#2c3e50")  # Darker background for a professional look
        
        # Title
        self.title_label = tk.Label(root, text="Random Password Generator", font=("Arial", 18, "bold"), bg="#2c3e50", fg="#ecf0f1")
        self.title_label.pack(pady=20)

        # Password Length Label
        self.label = tk.Label(root, text="Enter Password Length :", font=("Arial", 12), bg="#2c3e50", fg="#ecf0f1")
        self.label.pack(pady=10)

        # Input for Password Length
        self.length_entry = tk.Entry(root, font=("Arial", 14), width=10, justify="center")
        self.length_entry.pack(pady=5)

        # Generate Button
        self.generate_btn = tk.Button(root, text="Generate Password", command=self.generate_password, font=("Arial", 14),
                                       bg="#3498db", fg="white", relief="raised", padx=10, pady=5)
        self.generate_btn.pack(pady=15)

        # Output Field to Display Generated Password
        self.result_label = tk.Label(root, text="", font=("Arial", 14, "italic"), bg="#2c3e50", fg="#ecf0f1")
        self.result_label.pack(pady=10)

        # Copy Password Button
        self.copy_btn = tk.Button(root, text="Copy to Clipboard", command=self.copy_to_clipboard, font=("Arial", 12),
                                  bg="#2ecc71", fg="white", relief="raised", padx=10, pady=5)
        self.copy_btn.pack(pady=10)

        # Footer
        self.footer_label = tk.Label(root, text="Created by Your Name", font=("Arial", 10), bg="#2c3e50", fg="#bdc3c7")
        self.footer_label.pack(side=tk.BOTTOM, pady=10)

    # Password Generation Method
    def generate_password(self):
        try:
            length = int(self.length_entry.get())
            if length < 1:  # Minimum length for password
                raise ValueError("Password length must be at least 1")
            
            # Character pool includes uppercase, lowercase, digits, and special characters
            char_pool = string.ascii_letters + string.digits + string.punctuation
            
            # Generate password
            final_password = ''.join(random.choice(char_pool) for _ in range(length))

            # Display the generated password
            self.result_label.config(text=f"Generated Password: {final_password}")
        except ValueError as e:
            messagebox.showerror("Invalid Input", str(e))

    # Copy to Clipboard Method
    def copy_to_clipboard(self):
        password = self.result_label.cget("text").replace("Generated Password: ", "")
        if password:
            self.root.clipboard_clear()
            self.root.clipboard_append(password)
            messagebox.showinfo("Copied", "Password copied to clipboard!")
        else:
            messagebox.showwarning("No Password", "No password to copy. Please generate one first.")

# Run the password generator
if __name__ == "__main__":
    root = tk.Tk()
    app = PasswordGenerator(root)
    root.mainloop()
